{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samsunspor\\\\Desktop\\\\ReactPractice\\\\src\\\\components\\\\employeeList\\\\EmployeeList.js\";\n//rfc snippeti kullanılabilir.\nimport React from 'react';\nimport Employee from '../employee/Employee';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EmployeeList(props) {\n  const handleClearAll = () => (alert(\"ALERT\"), props.changedList([]));\n  //(App.js 25. satır ile ilişkili) => Burada da App.js'den gelen employees'i karşılamamız gerekir. bu sınıftaki fonksiyona parametre olarak \"props\" vererek bu sınıfa başka yerlerden gönderilen verileri \"props.\" şeklinde kullanabiliriz.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"EmployeeList \", props.employees.lenght, props.employees.map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Employee, {\n        employee: emp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 72\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 39\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClearAll,\n      children: \"Clear All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), \"props.movedlist.map()\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","Employee","EmployeeList","props","handleClearAll","alert","changedList","employees","lenght","map","emp"],"sources":["C:/Users/Samsunspor/Desktop/ReactPractice/src/components/employeeList/EmployeeList.js"],"sourcesContent":["//rfc snippeti kullanılabilir.\r\nimport React from 'react'\r\nimport Employee from '../employee/Employee'\r\n\r\nexport default function EmployeeList(props) {\r\n  const handleClearAll = () => (\r\n    alert(\"ALERT\"),\r\n    props.changedList([])\r\n  )\r\n  //(App.js 25. satır ile ilişkili) => Burada da App.js'den gelen employees'i karşılamamız gerekir. bu sınıftaki fonksiyona parametre olarak \"props\" vererek bu sınıfa başka yerlerden gönderilen verileri \"props.\" şeklinde kullanabiliriz.\r\n  return (\r\n    <div>\r\n      EmployeeList {props.employees.lenght}\r\n      {\r\n        props.employees.map((emp) => (<div><Employee employee={emp}  /><button>Button</button></div>))\r\n      }\r\n      <button onClick={handleClearAll}>Clear All</button>\r\n      props.movedlist.map()\r\n    </div>\r\n  )\r\n}"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,sBAAsB;AAAA;AAE3C,eAAe,SAASC,YAAY,CAACC,KAAK,EAAE;EAC1C,MAAMC,cAAc,GAAG,OACrBC,KAAK,CAAC,OAAO,CAAC,EACdF,KAAK,CAACG,WAAW,CAAC,EAAE,CAAC,CACtB;EACD;EACA,oBACE;IAAA,4BACgBH,KAAK,CAACI,SAAS,CAACC,MAAM,EAElCL,KAAK,CAACI,SAAS,CAACE,GAAG,CAAEC,GAAG,iBAAM;MAAA,wBAAK,QAAC,QAAQ;QAAC,QAAQ,EAAEA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,CAAC,eAEhG;MAAQ,OAAO,EAAEN,cAAe;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB;EAAA;IAAA;IAAA;IAAA;EAAA,QAE/C;AAEV;AAAC,KAhBuBF,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}